% матрица расстояний
dist = zeros(n,n); 
% матрица обратных расстояний
returndist = zeros(n,n);
% генерация городов (x,y)
cities = rand(n,2)*100;
costs=rand(n)*10;
sumOfDist=0;
maxCost=-1;
% создаем матрицу расстояний и матрицу обратных расстояний
for i = 1:n
    
    for j = 1:n
        
        % dist ( расстояния )
        dist(i,j) = sqrt((cities(i,1) - cities(j,1))^2 + ...
           (cities(i,2) - cities(j,2))^2);
        sumOfDist=sumOfDist+dist(i,j);
            % nn ( обратные расстояния )
            if i ~= j
            returndist(i,j) = 1/sqrt((cities(i,1) - cities(j,1))^2 + ...
                (cities(i,2) - cities(j,2))^2); 
            end
            
    end
   costs(i)=costs(i)*costs(i);
   if maxCost<costs(i)
       maxCost=costs(i);
   end    
end
times= zeros(1,97);
for i=3:100
    tic
    AntAlg();
    
end




hold on;
for i=1:n
    plot(cities(i,1),cities(i,2),'.','color','red');
%plot([cities(i)],'*','color','red');
end

% строим графику
citiesOP(:,[1,2]) = cities(bestROUTE(:),[1,2]);
plot([citiesOP(:,1)],[citiesOP(:,2)],'.r-')
for i=1:bestLENGTH-1
 % plot([cities(bestROUTE(i)),cities(bestROUTE(i+1))],'.-r');  
end
plot(cities(1,1),cities(1,2),'.','color','blue');
disp (num2str(bestDIST))
msgbox (['Итоговый рейтинг=',num2str(bestDIST)]);
clearvars -except cities bestDIST bestROUTE iter